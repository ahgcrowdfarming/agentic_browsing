name: Monthly Supermarket Scrape & Publish

on:
  schedule:
    # 04:00 UTC on the 1st of every month (â‰ˆ 05:00/06:00 Europe/Madrid)
    - cron: '0 4 1 * *'
  workflow_dispatch: {}

# avoid overlapping monthly runs
concurrency:
  group: supermarket-scrape-publish
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      contents: read

    # ðŸ‘‡ make all `run:` commands execute from your nested folder
    defaults:
      run:
        working-directory: examples/browser/supermarket_scrapper_v2

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Show working directory
        run: |
          pwd
          ls -la

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python deps
        run: |
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install playwright requests pandas
          fi

      - name: Install Playwright browsers & OS deps
        run: python -m playwright install --with-deps

      - name: Run pipeline (scrape -> CSV -> Foundry upload)
        env:
          # only if your scraper needs OpenAI
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

          # Foundry creds (repo secrets)
          FOUNDRY_HOST: ${{ secrets.FOUNDRY_HOST }}
          FOUNDRY_DATASET_RID: ${{ secrets.FOUNDRY_DATASET_RID }}
          FOUNDRY_TOKEN: ${{ secrets.FOUNDRY_TOKEN }}

          # Optional repo variables (not secrets)
          FOUNDRY_FOLDER_PREFIX: ${{ vars.FOUNDRY_FOLDER_PREFIX }}
          CSV_FILENAME: ${{ vars.CSV_FILENAME }}
        run: |
          python foundry_publish.py

      - name: Show outputs
        if: always()
        run: |
          echo "Tree of output/"
          ls -la output || true
          # if you still have per-country subfolders, this shows a couple of levels:
          find output -maxdepth 2 -type d -print | sort

      - name: Upload last_run.csv as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: last_run_csv
          path: examples/browser/supermarket_scrapper_v2/output/last_run.csv
          if-no-files-found: warn
